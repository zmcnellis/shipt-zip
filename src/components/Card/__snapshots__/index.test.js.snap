// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card should render correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    description="mockDescription"
    step="1"
    title="mockTitle"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt="mockTitle"
          className="article-img"
          src="step1.png"
/>,
        <h1
          className="article-title"
>
          mockTitle
</h1>,
        <p
          className="article-description"
>
          mockDescription
</p>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "mockTitle",
          "className": "article-img",
          "src": "step1.png",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "mockTitle",
          "className": "article-title",
        },
        "ref": null,
        "rendered": "mockTitle",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "mockDescription",
          "className": "article-description",
        },
        "ref": null,
        "rendered": "mockDescription",
        "type": "p",
      },
    ],
    "type": "article",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="mockTitle"
            className="article-img"
            src="step1.png"
/>,
          <h1
            className="article-title"
>
            mockTitle
</h1>,
          <p
            className="article-description"
>
            mockDescription
</p>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "mockTitle",
            "className": "article-img",
            "src": "step1.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "mockTitle",
            "className": "article-title",
          },
          "ref": null,
          "rendered": "mockTitle",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "mockDescription",
            "className": "article-description",
          },
          "ref": null,
          "rendered": "mockDescription",
          "type": "p",
        },
      ],
      "type": "article",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
